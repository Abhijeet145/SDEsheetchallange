Given an integer array of size n, find all elements that appear more than ⌊ n/3 ⌋ times.

 

class Solution {
public:
    vector<int> majorityElement(vector<int>& nums) {
        int num1=INT_MIN,num2 = INT_MIN;
        int c1=0,c2=0;
        for(auto x:nums)
        {
            if(x==num1)
                c1++;
            else if(x==num2)
                c2++;
            else if(c1==0)
            {
                num1 = x;
                c1 = 1;
            }
            else if(c2 == 0)
            {
                num2 = x;
                c2 = 1;
            }
            else
            {
                c1--;
                c2--;
            }
        }
        c1 = 0;
        c2 = 0;
        for(auto x:nums)
        {
            if(x==num1)
                c1++;
            if(x==num2)
                c2++;
        }
      
        vector<int> ans;
        if(c1 > (nums.size()/3))
            ans.push_back(num1);
        if(c2 > (nums.size()/3))
            ans.push_back(num2);
        return ans;
    }
};

// to remember
it is just the extendede version of the majority element but we cannot be sure if these are the mojority elements that's why we need to add check the count of those two numbers
