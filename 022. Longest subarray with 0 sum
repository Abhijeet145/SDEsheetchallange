Given an array having both positive and negative integers. The task is to compute the length of the largest subarray with sum 0.


class Solution{
    public:
    int maxLen(vector<int>&A, int n)
    {   
        // Your code here
        unordered_map<int,int> mp;
        int sum = 0;
        int ans = 0;
        for(int i=0;i<n;i++)
        {
            sum+=A[i];
            if(sum == 0)
            ans = i + 1;
            if(mp.find(sum)!=mp.end())
                ans = max(i - mp[sum],ans);
            else
            mp[sum] = i;
        }
        return ans;
    }
};

// approach
This is quite simple problem we can brute force it giving us O(N^2) solution or use optimal solution
Here we take a running sun and check if we have previously found this sum or not 
if found earlier this means that the sum of next elements must be 0 as the sum remains the same
